#!/usr/bin/env ruby
require "slop"
require "pry"
require File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", "micro_test"))

opts = Slop.parse(:strict => true, :help => true) do
  banner "mt [options]"
  on :p, :path, "The path to the test directory or file.", :argument => true
  on :f, :formatter, "The name of the formatter to use.", :argument => true
  on :pry, "Starts a pry session when tests fail or have errors."
end

exit if opts[:help]

path = opts[:path] || "test"
path = File.join(Dir.pwd, path) unless path =~ /^\//
unless File.exist?(path)
  puts "#{path} not found."
  puts "Please check the path and try again."
  exit
end
if path =~ /\.rb$/
  require path
else
  Dir[File.join(path, "**", "*.rb")].each { |p| require p }
end

formatter_name = opts[:formatter] || "default"
formatter_path = File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", "micro_test", "formatters", formatter_name + ".rb"))
unless File.exist?(formatter_path)
  puts "#{formatter_path} not found."
  puts "Please check the formatter name and try again."
  exit
end
begin
  require formatter_path
  formatter = MicroTest.const_get("Formatter").new
rescue Exception => ex
  puts "Failed to load the formatter."
  puts ex.message
  exit
end

MicroTest::Runner.run formatter, :pry => !!opts[:pry]
